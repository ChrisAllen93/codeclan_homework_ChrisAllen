library(tidyverse)
library(readxl)
library(janitor)
telco_churn <- read_excel("data/telecomms_churn.xlsx") %>%
clean_names()
telco_churn <- read_excel("data/telecomms_churn.xlsx") %>%
clean_names()
telco_churn
telco_clean <- telco_churn %>%
filter(!is.na(total_charges)) %>%
select(-customer_id) %>%
mutate(across(where(is_character), as_factor)) %>%
mutate(senior_citizen = as_factor(if_else(senior_citizen == 1, "Yes", "No")))
split1 <- telco_churn %>%
select(gender, senior_citizen, partner, churn)
split2 <- telco_churn %>%
select(dependents, tenure, phone_service, churn)
split3 <- telco_churn %>%
select(internet_service, contract, monthly_charges, total_charges, churn)
split1 <- telco_churn %>%
select(gender, senior_citizen, partner, churn)
split2 <- telco_churn %>%
select(dependents, tenure, phone_service, churn)
split3 <- telco_churn %>%
select(internet_service, contract, monthly_charges, total_charges, churn)
split1 %>%
ggpairs()
library(ggfortify)
split1 <- telco_churn %>%
select(gender, senior_citizen, partner, churn)
split2 <- telco_churn %>%
select(dependents, tenure, phone_service, churn)
split3 <- telco_churn %>%
select(internet_service, contract, monthly_charges, total_charges, churn)
split1 %>%
ggpairs()
library(GGally)
split1 <- telco_churn %>%
select(gender, senior_citizen, partner, churn)
split2 <- telco_churn %>%
select(dependents, tenure, phone_service, churn)
split3 <- telco_churn %>%
select(internet_service, contract, monthly_charges, total_charges, churn)
split1 %>%
ggpairs()
split2 %>%
ggpairs()
split3 %>%
ggpairs()
split1 <- telco_churn %>%
select(gender, senior_citizen, partner, churn)
split2 <- telco_churn %>%
select(dependents, tenure, phone_service, churn)
split3 <- telco_churn %>%
select(internet_service, contract, monthly_charges, total_charges, churn)
split1 %>%
ggpairs(progress = FALSE)
split2 %>%
ggpairs(progress = FALSE)
split3 %>%
ggpairs(progress = FALSE)
split1 <- telco_churn %>%
select(gender, senior_citizen, partner, churn)
split2 <- telco_churn %>%
select(dependents, tenure, phone_service, churn)
split3 <- telco_churn %>%
select(internet_service, contract, monthly_charges, total_charges, churn)
split1 %>%
ggpairs(progress = FALSE)
split2 %>%
ggpairs(progress = FALSE)
split3 %>%
ggpairs(progress = FALSE)
model1_glm <- glm(churn ~ tenure,
data = telco_churn,
family = binomial(link = "logit")
)
model1_glm <- glm(churn ~ tenure,
data = telco_churn,
family = binomial(link = "logit")
)
churn
telco_clean <- telco_churn %>%
filter(!is.na(total_charges)) %>%
select(-customer_id) %>%
mutate(across(where(is_character), as_factor)) %>%
mutate(senior_citizen = as_factor(if_else(senior_citizen == 1, "Yes", "No")),
churn = if_else(churn == "Yes", TRUE, FALSE))
telco_clean
model1_glm <- glm(churn ~ tenure,
data = telco_churn,
family = binomial(link = "logit")
)
split1 <- telco_churn %>%
select(gender, senior_citizen, partner, churn)
split2 <- telco_churn %>%
select(dependents, tenure, phone_service, churn)
split3 <- telco_churn %>%
select(internet_service, contract, monthly_charges, total_charges, churn)
split1 %>%
ggpairs(progress = FALSE)
split2 %>%
ggpairs(progress = FALSE)
split3 %>%
ggpairs(progress = FALSE)
model1_glm <- glm(churn ~ tenure,
data = telco_churn,
family = binomial(link = "logit")
)
library(modelr)
model1_glm <- glm(churn ~ tenure,
data = telco_churn,
family = binomial(link = "logit")
)
telco_clean <- telco_churn %>%
filter(!is.na(total_charges)) %>%
select(-customer_id) %>%
mutate(across(where(is_character), as_factor)) %>%
mutate(senior_citizen = as_factor(if_else(senior_citizen == 1, "Yes", "No")),
churn = as_factor(churn))
split1 <- telco_churn %>%
select(gender, senior_citizen, partner, churn)
split2 <- telco_churn %>%
select(dependents, tenure, phone_service, churn)
split3 <- telco_churn %>%
select(internet_service, contract, monthly_charges, total_charges, churn)
split1 %>%
ggpairs(progress = FALSE)
split2 %>%
ggpairs(progress = FALSE)
split3 %>%
ggpairs(progress = FALSE)
model1_glm <- glm(churn ~ tenure,
data = telco_churn,
family = binomial(link = "logit")
)
telco_churn
telco_clean <- telco_churn %>%
filter(!is.na(total_charges)) %>%
select(-customer_id) %>%
mutate(across(where(is_character), as_factor)) %>%
mutate(senior_citizen = as_factor(if_else(senior_citizen == 1, "Yes", "No")),
churn = as_factor(churn))
telco_clean
split1 <- telco_clean %>%
select(gender, senior_citizen, partner, churn)
split2 <- telco_clean %>%
select(dependents, tenure, phone_service, churn)
split3 <- telco_clean %>%
select(internet_service, contract, monthly_charges, total_charges, churn)
split1 %>%
ggpairs(progress = FALSE)
split2 %>%
ggpairs(progress = FALSE)
split3 %>%
ggpairs(progress = FALSE)
model1_glm <- glm(churn ~ tenure,
data = telco_clean,
family = binomial(link = "logit")
)
model2_glm <- glm(churn ~ senior_citizen,
data = telco_clean,
family = binomial(link = "logit")
)
model3_glm <- glm(churn ~ total_charges,
data = telco_clean,
family = binomial(link = "logit")
)
summary(model1_glm)
summary(model2_glm)
summary(model3_glm)
roc(model1_glm)
library(pROC)
model1_roc <- roc(model1_glm)
model1_with_pred <- telco_clean %>%
add_predictions(model1_glm, type = "response")
model1_with_pred
model1_glm
model1_with_pred <- telco_clean %>%
select(tenure, churn) %>%
add_predictions(model1_glm, type = "response")
model1_with_pred
model1_with_pred
roc_obj_1 <- model1_with_pred %>%
roc(response = churn, predictor = pred)
ggroc(data = roc_obj_1, legacy.axes = TRUE)
ggroc(data = roc_obj_1, legacy.axes = TRUE) +
labs(x = "False Positive Rate",
y = "True Positive Rate")
model2_glm
model2_with_pred <- telco_clean %>%
select(senior_citizen, churn) %>%
add_predictions(model2_glm, type = "response")
model2_with_pred
roc_obj_2 <- model2_with_pred %>%
roc(response = churn, predictor = pred)
model3_glm
model3_with_pred <- telco_clean %>%
select(total_charges, churn) %>%
add_predictions(model3_glm, type = "response")
roc_obj_3 <- model3_with_pred %>%
roc(response = churn, predictor = pred)
model3_with_pred
model1_with_pred <- telco_clean %>%
select(tenure, churn) %>%
add_predictions(model1_glm, type = "response")
roc_obj_1 <- model1_with_pred %>%
roc(response = churn, predictor = pred)
model2_with_pred <- telco_clean %>%
select(senior_citizen, churn) %>%
add_predictions(model2_glm, type = "response")
roc_obj_2 <- model2_with_pred %>%
roc(response = churn, predictor = pred)
model3_with_pred <- telco_clean %>%
select(total_charges, churn) %>%
add_predictions(model3_glm, type = "response")
roc_obj_3 <- model3_with_pred %>%
roc(response = churn, predictor = pred)
ggroc(data = list("tenure_model" = roc_obj_1,
"senior_citizen_model" = roc_obj_2,
"total_charges_model" = roc_obj_3),
legacy.axes = TRUE) +
labs(x = "False Positive Rate",
y = "True Positive Rate")
auc(roc_obj_1)
auc(roc_obj_2)
auc(roc_obj_3)
summart(model1_glm)
summary(model1_glm)
min_tenure <- min(telco_clean$tenure)
max_tenure <- max(telco_clean$tenure)
min_tenure
max_tenure
logit <- function(x) {
b0 <- 0.037299
b1 <- -0.039010
return(log(x / (1 - exp(b0 + b1*x))))
}
min_tenure <- min(telco_clean$tenure)
max_tenure <- max(telco_clean$tenure)
logit_data <- tibble(p = seq(min_tenure, max_tenure, 1)) %>%
mutate(logit_p = logit(p))
)
logit <- function(x) {
b0 <- 0.037299
b1 <- -0.039010
return(log(x / (1 - exp(b0 + b1*x))))
}
min_tenure <- min(telco_clean$tenure)
max_tenure <- max(telco_clean$tenure)
logit_data <- tibble(p = seq(min_tenure, max_tenure, 1)) %>%
mutate(logit_p = logit(p))
logit_data
ggplot(logit_data) +
geom_line(aes(x = p, y = logit_p))
logit <- function(x) {
b0 <- 0.037299
b1 <- -0.039010
return(log(1 / (1 - exp(b0 + b1*x))))
}
min_tenure <- min(telco_clean$tenure)
max_tenure <- max(telco_clean$tenure)
logit_data <- tibble(p = seq(min_tenure, max_tenure, 1)) %>%
mutate(logit_p = logit(p))
ggplot(logit_data) +
geom_line(aes(x = p, y = logit_p))
log_predictions <- tibble(tenure = seq(min_tenure, max_tenure, 1)) %>%
add_predictions(model1_glm,
type = "response")
log_predictions
labs(y = "Estimated p(churn)")
min_tenure <- min(telco_clean$tenure)
max_tenure <- max(telco_clean$tenure)
log_predictions <- tibble(tenure = seq(min_tenure, max_tenure, 1)) %>%
add_predictions(model1_glm,
type = "response")
ggplot(telco_clean) +
geom_jitter(aes(x = tenure, y = churn), alpha = 0.5,
height = 0.1, width = 0.1) +
geom_line(data = log_predictions, aes(x = tenure, y = pred), col = "red") +
labs(y = "Estimated p(churn)")
telco_clean <- telco_churn %>%
filter(!is.na(total_charges)) %>%
select(-customer_id) %>%
mutate(across(where(is_character), as_factor)) %>%
mutate(senior_citizen = as_factor(if_else(senior_citizen == 1, "Yes", "No")),
churn = as.factor(if_else(churn = "Yes", TRUE, FALSE)))
telco_clean <- telco_churn %>%
filter(!is.na(total_charges)) %>%
select(-customer_id) %>%
mutate(across(where(is_character), as_factor)) %>%
mutate(senior_citizen = as_factor(if_else(senior_citizen == 1, "Yes", "No")),
churn = as.factor(if_else(churn == "Yes", TRUE, FALSE)))
telco_clean
telco_churn %>%
filter(!is.na(total_charges)) %>%
select(-customer_id) %>%
mutate(across(where(is_character), as_factor))
telco_clean <- telco_churn %>%
filter(!is.na(total_charges)) %>%
select(-customer_id) %>%
mutate(across(where(is_character), as_factor)) %>%
mutate(senior_citizen = as_factor(if_else(senior_citizen == 1, "Yes", "No")),
churn = as.factor(if_else(churn == "Yes", TRUE, FALSE)))
split1 <- telco_clean %>%
select(gender, senior_citizen, partner, churn)
split2 <- telco_clean %>%
select(dependents, tenure, phone_service, churn)
split3 <- telco_clean %>%
select(internet_service, contract, monthly_charges, total_charges, churn)
split1 %>%
ggpairs(progress = FALSE)
split2 %>%
ggpairs(progress = FALSE)
split3 %>%
ggpairs(progress = FALSE)
model1_glm <- glm(churn ~ tenure,
data = telco_clean,
family = binomial(link = "logit")
)
model2_glm <- glm(churn ~ senior_citizen,
data = telco_clean,
family = binomial(link = "logit")
)
model3_glm <- glm(churn ~ total_charges,
data = telco_clean,
family = binomial(link = "logit")
)
summary(model1_glm)
summary(model2_glm)
summary(model3_glm)
model1_with_pred <- telco_clean %>%
select(tenure, churn) %>%
add_predictions(model1_glm, type = "response")
roc_obj_1 <- model1_with_pred %>%
roc(response = churn, predictor = pred)
model2_with_pred <- telco_clean %>%
select(senior_citizen, churn) %>%
add_predictions(model2_glm, type = "response")
roc_obj_2 <- model2_with_pred %>%
roc(response = churn, predictor = pred)
model3_with_pred <- telco_clean %>%
select(total_charges, churn) %>%
add_predictions(model3_glm, type = "response")
roc_obj_3 <- model3_with_pred %>%
roc(response = churn, predictor = pred)
ggroc(data = list("tenure_model" = roc_obj_1,
"senior_citizen_model" = roc_obj_2,
"total_charges_model" = roc_obj_3),
legacy.axes = TRUE) +
labs(x = "False Positive Rate",
y = "True Positive Rate")
auc(roc_obj_1)
auc(roc_obj_2)
auc(roc_obj_3)
summary(model1_glm)
min_tenure <- min(telco_clean$tenure)
max_tenure <- max(telco_clean$tenure)
log_predictions <- tibble(tenure = seq(min_tenure, max_tenure, 1)) %>%
add_predictions(model1_glm,
type = "response")
ggplot(telco_clean) +
geom_jitter(aes(x = tenure, y = churn), alpha = 0.5,
height = 0.1, width = 0.1) +
geom_line(data = log_predictions, aes(x = tenure, y = pred), col = "red") +
labs(y = "Estimated p(churn)")
ggplot(telco_clean) +
geom_jitter(aes(x = tenure, y = as.numeric(churn)), alpha = 0.5,
height = 0.1, width = 0.1) +
geom_line(data = log_predictions, aes(x = tenure, y = pred), col = "red") +
labs(y = "Estimated p(churn)")
min_tenure <- min(telco_clean$tenure)
max_tenure <- max(telco_clean$tenure)
log_predictions <- tibble(tenure = seq(min_tenure, max_tenure, 1)) %>%
add_predictions(model1_glm,
type = "response")
ggplot(telco_clean) +
geom_jitter(aes(x = tenure, y = churn), alpha = 0.5,
height = 0.1, width = 0.1) +
geom_line(data = log_predictions, aes(x = tenure, y = pred), col = "red") +
labs(y = "Estimated p(churn)")
as.numeric(telco_clean$churn)
telco_clean <- telco_churn %>%
filter(!is.na(total_charges)) %>%
select(-customer_id) %>%
mutate(across(where(is_character), as_factor)) %>%
mutate(senior_citizen = as_factor(if_else(senior_citizen == 1, "Yes", "No")),
churn = if_else(churn == "Yes", TRUE, FALSE))
split1 <- telco_clean %>%
select(gender, senior_citizen, partner, churn)
split2 <- telco_clean %>%
select(dependents, tenure, phone_service, churn)
split3 <- telco_clean %>%
select(internet_service, contract, monthly_charges, total_charges, churn)
split1 %>%
ggpairs(progress = FALSE)
split2 %>%
ggpairs(progress = FALSE)
split3 %>%
ggpairs(progress = FALSE)
model1_glm <- glm(churn ~ tenure,
data = telco_clean,
family = binomial(link = "logit")
)
model2_glm <- glm(churn ~ senior_citizen,
data = telco_clean,
family = binomial(link = "logit")
)
model3_glm <- glm(churn ~ total_charges,
data = telco_clean,
family = binomial(link = "logit")
)
library(tidyverse)
library(readxl)
library(janitor)
library(ggfortify)
library(GGally)
library(modelr)
library(pROC)
telco_churn <- read_excel("data/telecomms_churn.xlsx") %>%
clean_names()
telco_churn
telco_clean <- telco_churn %>%
filter(!is.na(total_charges)) %>%
select(-customer_id) %>%
mutate(across(where(is_character), as_factor)) %>%
mutate(senior_citizen = as_factor(if_else(senior_citizen == 1, "Yes", "No")),
churn = if_else(churn == "Yes", TRUE, FALSE))
split1 <- telco_clean %>%
select(gender, senior_citizen, partner, churn)
split2 <- telco_clean %>%
select(dependents, tenure, phone_service, churn)
split3 <- telco_clean %>%
select(internet_service, contract, monthly_charges, total_charges, churn)
split1 %>%
ggpairs(progress = FALSE)
split2 %>%
ggpairs(progress = FALSE)
split3 %>%
ggpairs(progress = FALSE)
model1_glm <- glm(churn ~ tenure,
data = telco_clean,
family = binomial(link = "logit")
)
model2_glm <- glm(churn ~ senior_citizen,
data = telco_clean,
family = binomial(link = "logit")
)
model3_glm <- glm(churn ~ total_charges,
data = telco_clean,
family = binomial(link = "logit")
)
summary(model1_glm)
summary(model2_glm)
summary(model3_glm)
model1_with_pred <- telco_clean %>%
select(tenure, churn) %>%
add_predictions(model1_glm, type = "response")
roc_obj_1 <- model1_with_pred %>%
roc(response = churn, predictor = pred)
model2_with_pred <- telco_clean %>%
select(senior_citizen, churn) %>%
add_predictions(model2_glm, type = "response")
roc_obj_2 <- model2_with_pred %>%
roc(response = churn, predictor = pred)
model3_with_pred <- telco_clean %>%
select(total_charges, churn) %>%
add_predictions(model3_glm, type = "response")
roc_obj_3 <- model3_with_pred %>%
roc(response = churn, predictor = pred)
ggroc(data = list("tenure_model" = roc_obj_1,
"senior_citizen_model" = roc_obj_2,
"total_charges_model" = roc_obj_3),
legacy.axes = TRUE) +
labs(x = "False Positive Rate",
y = "True Positive Rate")
auc(roc_obj_1)
auc(roc_obj_2)
auc(roc_obj_3)
summary(model1_glm)
min_tenure <- min(telco_clean$tenure)
max_tenure <- max(telco_clean$tenure)
log_predictions <- tibble(tenure = seq(min_tenure, max_tenure, 1)) %>%
add_predictions(model1_glm,
type = "response")
ggplot(telco_clean) +
geom_jitter(aes(x = tenure, y = as.nuemric(churn)), alpha = 0.5,
height = 0.1, width = 0.1) +
geom_line(data = log_predictions, aes(x = tenure, y = pred), col = "red") +
labs(y = "Estimated p(churn)")
min_tenure <- min(telco_clean$tenure)
max_tenure <- max(telco_clean$tenure)
log_predictions <- tibble(tenure = seq(min_tenure, max_tenure, 1)) %>%
add_predictions(model1_glm,
type = "response")
ggplot(telco_clean) +
geom_jitter(aes(x = tenure, y = as.numeric(churn)), alpha = 0.5,
height = 0.1, width = 0.1) +
geom_line(data = log_predictions, aes(x = tenure, y = pred), col = "red") +
labs(y = "Estimated p(churn)")
odds_change(-0.039010, 1)
odds_change <- function(b1, change){
exp(b1 * change)
}
odds_change(-0.039010, 1)
