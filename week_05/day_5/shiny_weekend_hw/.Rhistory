group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Genre")
combined_data <- total_sales %>%
bind_rows(platform_sales, genre_sales)
# pivot_wider(names_from = type_of_sale, values_from = annual_sales)
combined_data %>%
ggplot(aes(x = year_of_release,
y = annual_sales,
colour = type_of_sale)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = seq(from = 1985, to = 2020, by = 5)) +
scale_y_continuous(breaks = seq(from = 0, to = 250, by = 50,
expand = c(0,0)),
expand = c(0.0001,0)) +
coord_cartesian(clip = "off") +
labs(x = "Year of Release",
y = "Annual Sales (£m)",
title = "Annual Game Sales vs Year of Release",
colour = "Sale Category") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(colour = "gray90"),
axis.line = element_line(colour = "gray90"),
legend.key = element_blank())
# total sales
total_sales <- game_sales %>%
#filter(developer == "Ubisoft") %>% # to be controlled by input choices
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Total")
# total sales for platform
platform_sales <- game_sales %>%
filter(platform == "Wii") %>%
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Platform")
# total sales for genre
genre_sales <- game_sales %>%
filter(genre == "Sports") %>%
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Genre")
combined_data <- total_sales %>%
bind_rows(platform_sales, genre_sales)
# pivot_wider(names_from = type_of_sale, values_from = annual_sales)
combined_data %>%
ggplot(aes(x = year_of_release,
y = annual_sales,
colour = type_of_sale)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = seq(from = 1985, to = 2020, by = 5)) +
scale_y_continuous(breaks = seq(from = 0, to = 250, by = 50,
expand = c(0,0)),
expand = c(0.001,0)) +
coord_cartesian(clip = "off") +
labs(x = "Year of Release",
y = "Annual Sales (£m)",
title = "Annual Game Sales vs Year of Release",
colour = "Sale Category") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(colour = "gray90"),
axis.line = element_line(colour = "gray90"),
legend.key = element_blank())
# total sales
total_sales <- game_sales %>%
#filter(developer == "Ubisoft") %>% # to be controlled by input choices
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Total")
# total sales for platform
platform_sales <- game_sales %>%
filter(platform == "Wii") %>%
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Platform")
# total sales for genre
genre_sales <- game_sales %>%
filter(genre == "Sports") %>%
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Genre")
combined_data <- total_sales %>%
bind_rows(platform_sales, genre_sales)
# pivot_wider(names_from = type_of_sale, values_from = annual_sales)
combined_data %>%
ggplot(aes(x = year_of_release,
y = annual_sales,
colour = type_of_sale)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = seq(from = 1985, to = 2020, by = 5)) +
scale_y_continuous(breaks = seq(from = 0, to = 250, by = 50,
expand = c(0,0))) +
coord_cartesian(clip = "off") +
labs(x = "Year of Release",
y = "Annual Sales (£m)",
title = "Annual Game Sales vs Year of Release",
colour = "Sale Category") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(colour = "gray90"),
axis.line = element_line(colour = "gray90"),
legend.key = element_blank())
# total sales
total_sales <- game_sales %>%
#filter(developer == "Ubisoft") %>% # to be controlled by input choices
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Total")
# total sales for platform
platform_sales <- game_sales %>%
filter(platform == "Wii") %>%
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Platform")
# total sales for genre
genre_sales <- game_sales %>%
filter(genre == "Sports") %>%
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Genre")
combined_data <- total_sales %>%
bind_rows(platform_sales, genre_sales)
# pivot_wider(names_from = type_of_sale, values_from = annual_sales)
combined_data %>%
ggplot(aes(x = year_of_release,
y = annual_sales,
colour = type_of_sale)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = seq(from = 1985, to = 2020, by = 5)) +
scale_y_continuous(breaks = seq(from = 0, to = 250, by = 50,
expand = c(0,0))) +
ylim(0, NA) +
coord_cartesian(clip = "off") +
labs(x = "Year of Release",
y = "Annual Sales (£m)",
title = "Annual Game Sales vs Year of Release",
colour = "Sale Category") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(colour = "gray90"),
axis.line = element_line(colour = "gray90"),
legend.key = element_blank())
# total sales
total_sales <- game_sales %>%
#filter(developer == "Ubisoft") %>% # to be controlled by input choices
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Total")
# total sales for platform
platform_sales <- game_sales %>%
filter(platform == "Wii") %>%
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Platform")
# total sales for genre
genre_sales <- game_sales %>%
filter(genre == "Sports") %>%
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Genre")
combined_data <- total_sales %>%
bind_rows(platform_sales, genre_sales)
# pivot_wider(names_from = type_of_sale, values_from = annual_sales)
combined_data %>%
ggplot(aes(x = year_of_release,
y = annual_sales,
colour = type_of_sale)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = seq(from = 1985, to = 2020, by = 5)) +
scale_y_continuous(breaks = seq(from = 0, to = 250, by = 50,
expand = c(0,0))) +
coord_cartesian(clip = "off") +
labs(x = "Year of Release",
y = "Annual Sales (£m)",
title = "Annual Game Sales vs Year of Release",
colour = "Sale Category") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(colour = "gray90"),
axis.line = element_line(colour = "gray90"),
legend.key = element_blank())
runApp()
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales))
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales))
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(desc(total_sales))
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(desc(total_sales)) %>%
ggplot(aes(x = total_sales,
y = platform)) +
geom_col()
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
ggplot(aes(x = total_sales,
y = platform)) +
geom_col()
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
# arrange(total_sales) %>%
ggplot(aes(x = total_sales,
y = platform)) +
geom_col()
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
# arrange(total_sales) %>%
ggplot(aes(y = total_sales,
x = platform)) +
geom_col()
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
ggplot(aes(y = total_sales,
x = platform)) +
geom_col()
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
ggplot(aes(y = total_sales,
x = reorder(platform, -total_sales))) +
geom_col()
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, -total_sales))) +
geom_col()
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales))) +
geom_col()
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales)),
fill = c("Wii" = "green", "red")) +
geom_col()
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales)),
fill = factor(ifelse(platform == "Wii", "Selection", "Other"))) +
geom_col() +
scale_fill_manual(name = "Selection", values=c("red","grey50")) +
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales)),
fill = factor(ifelse(platform == "Wii", "Selection", "Other"))) +
geom_col() +
scale_fill_manual(name = "Selection", values=c("red","grey50"))
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales)),
fill = factor(ifelse(platform == "Wii", "Selection", "Other"))) +
geom_col() +
scale_fill_manual(name = "platform", values=c("red","grey50"))
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales)),
fill = factor(ifelse(platform == "Wii", "Selection", "Other"))) +
geom_col() +
scale_fill_manual(name = "platform", values=c("red","grey50"))
platform == "Wii"
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales)
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales)),
fill = factor(ifelse(platform == "GC", "Selection", "Other"))) +
geom_col() +
scale_fill_manual(name = "platform", values=c("red","grey50"))
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales)),
fill = factor(ifelse(platform == "GC", "Selection", "Other"))) +
geom_col() +
scale_fill_manual(name = "platform", values = c("red","grey50"))
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
mutate(platform = factor(levels = ifelse(platform = "GC", "Selection", "Highlighted"))) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales)),
fill = platform) +
geom_col() +
scale_fill_manual(name = "platform", values = c("red","grey50"))
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
mutate(platform = factor(levels = ifelse(platform == "GC", "Selection", "Highlighted"))) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales)),
fill = platform) +
geom_col() +
scale_fill_manual(name = "platform", values = c("red","grey50"))
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales)
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
mutate(highlighted = ifelse(platform = "Wii", T, F))
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
mutate(highlighted = ifelse(platform == "Wii", T, F))
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
mutate(highlighted = ifelse(platform == "Wii", T, NA))
mutate(platform = factor(levels = ifelse(platform == "GC", "Selection", "Highlighted"))) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales)),
fill = highlighted) +
geom_col() +
scale_fill_manual(name = "platform", values = c("red","grey50"))
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales)),
fill = highlighted) +
geom_col() +
scale_fill_manual(name = "platform", values = c("red","grey50"))
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
mutate(highlighted = ifelse(platform == "Wii", T, NA))
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales),
fill = highlighted)) +
geom_col() +
scale_fill_manual(name = "platform", values = c("red","grey50"))
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
mutate(highlighted = ifelse(platform == "Wii", T, NA)) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales),
fill = highlighted)) +
geom_col() +
scale_fill_manual(name = "platform", values = c("red","grey50"))
platform_choice <- "PS4"
game_sales %>%
group_by(platform) %>%
summarise(total_sales = sum(sales)) %>%
arrange(total_sales) %>%
mutate(highlighted = ifelse(platform == platform_choice, T, NA)) %>%
ggplot(aes(x = total_sales,
y = reorder(platform, total_sales),
fill = highlighted)) +
geom_col() +
scale_fill_manual(name = "platform", values = c("red","grey50"))
runApp()
runApp()
# total sales
total_sales <- game_sales %>%
#filter(developer == "Ubisoft") %>% # to be controlled by input choices
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Total")
# total sales for platform
platform_sales <- game_sales %>%
filter(platform == "Wii") %>%
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Platform")
# total sales for genre
genre_sales <- game_sales %>%
filter(genre == "Sports") %>%
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Genre")
combined_data <- total_sales %>%
bind_rows(platform_sales, genre_sales)
# pivot_wider(names_from = type_of_sale, values_from = annual_sales)
combined_data %>%
ggplot(aes(x = year_of_release,
y = annual_sales,
colour = type_of_sale)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = seq(from = 1985, to = 2020, by = 5)) +
scale_y_continuous(breaks = seq(from = 0, to = 250, by = 50,
expand = c(0,0))) +
coord_cartesian(clip = "off") +
scale_colour_manual("Total" = "red",
"Platform" = "green",
"Genre" = "blue") +
labs(x = "Year of Release",
y = "Annual Sales (£m)",
title = "Annual Game Sales vs Year of Release",
colour = "Sale Category") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(colour = "gray90"),
axis.line = element_line(colour = "gray90"),
legend.key = element_blank())
# total sales
total_sales <- game_sales %>%
#filter(developer == "Ubisoft") %>% # to be controlled by input choices
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Total")
# total sales for platform
platform_sales <- game_sales %>%
filter(platform == "Wii") %>%
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Platform")
# total sales for genre
genre_sales <- game_sales %>%
filter(genre == "Sports") %>%
group_by(year_of_release) %>%
summarise(annual_sales = sum(sales)) %>%
mutate(type_of_sale = "Genre")
combined_data <- total_sales %>%
bind_rows(platform_sales, genre_sales)
# pivot_wider(names_from = type_of_sale, values_from = annual_sales)
combined_data %>%
ggplot(aes(x = year_of_release,
y = annual_sales,
colour = type_of_sale)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = seq(from = 1985, to = 2020, by = 5)) +
scale_y_continuous(breaks = seq(from = 0, to = 250, by = 50,
expand = c(0,0))) +
coord_cartesian(clip = "off") +
scale_colour_manual(values = c("Total" = "red",
"Platform" = "green",
"Genre" = "blue")) +
labs(x = "Year of Release",
y = "Annual Sales (£m)",
title = "Annual Game Sales vs Year of Release",
colour = "Sale Category") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(colour = "gray90"),
axis.line = element_line(colour = "gray90"),
legend.key = element_blank())
runApp()
runApp()
input$genre_input
input$platform_input
?paste
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
