movies_selected <- tmdb_movies %>%
select(original_title, runtime, budget) %>%
summarise(across(.fns = ~sum(is.na(.x))))
library(tidyverse)
tmdb_credits <- read_csv("tmdb_5000_credits.csv")
tmdb_movies <- read_csv("tmdb_5000_movies.csv")
View(tmdb_credits)
View(tmdb_movies)
movies_selected <- tmdb_movies %>%
select(original_title, runtime, budget) %>%
summarise(across(.fns = ~sum(is.na(.x))))
movies_selected
# Calculate median runtime from existing data
med_runtime <- movies_runtime %>%
summarise(med_runtime = median(runtime, na.rm = T)) %>%
pull()
# Calculate median runtime from existing data
'med_runtime <- movies_runtime %>%
summarise(med_runtime = median(runtime, na.rm = T)) %>%
pull()
med_runtime'
# replace na values in dataset with median runtime
movies_imputed <- movies_runtime %>%
mutate(runtime = coalesce(runtime, median(runtime, na.rm = T)))
movies_runtime
movies_runtime <- tmdb_movies %>%
select(title, runtime, budget) %>%
mutate(runtime = na_if(runtime, 0))
num_na <- movies_runtime %>%
summarise(num_na = sum(is.na(runtime))) %>%
pull()
movies_runtime
num_na
# Calculate median runtime from existing data
'med_runtime <- movies_runtime %>%
summarise(med_runtime = median(runtime, na.rm = T)) %>%
pull()
med_runtime'
# replace na values in dataset with median runtime
movies_imputed <- movies_runtime %>%
mutate(runtime = coalesce(runtime, median(runtime, na.rm = T)))
movies_imputed
# check for no missing runtime values
movies_imputed %>%
summarise(runtime_mv = sum(is.na(runtime)))
num_of_na <- tmdb_movies %>%
mutate(across(where(is.character),is.na),
across(where(is.numeric),is.na)) %>%
summarise(across(where(is.logical),sum))
num_of_na
tmdb_movies %>%
summarise(across(where(is.numeric), ~sum(is.na(.x)))
num_of_na <- tmdb_movies %>%
mutate(across(where(is.character),is.na),
across(where(is.numeric),is.na)) %>%
summarise(across(where(is.logical),sum))
num_of_na
tmdb_movies %>%
summarise(across(where(is.numeric), ~sum(is.na(.x))))
num_of_na <- tmdb_movies %>%
mutate(across(where(is.character),is.na),
across(where(is.numeric),is.na)) %>%
summarise(across(where(is.logical),sum))
num_of_na
tmdb_movies %>%
summarise(across(where(is.numeric), ~sum(is.na(.x))),
across(where(is.character), ~sum(is.na(.x))))
'num_of_na <- tmdb_movies %>%
mutate(across(where(is.character),is.na),
across(where(is.numeric),is.na)) %>%
summarise(across(where(is.logical),sum))
num_of_na'
tmdb_movies %>%
summarise(across(where(is.numeric), ~sum(is.na(.x))),
across(where(is.character), ~sum(is.na(.x))))
movies_runtime
# Replacing zero runtime values with NA
movies_runtime <- tmdb_movies %>%
select(title, runtime, budget) %>%
mutate(runtime = na_if(runtime, 0))
library(tidyverse)
# Reading in datasets
tmdb_credits <- read_csv("tmdb_5000_credits.csv")
tmdb_movies <- read_csv("tmdb_5000_movies.csv")
# Selecting title, runtime and budget columns and calculating the number of
# "NA" values
movies_selected <- tmdb_movies %>%
select(original_title, runtime, budget) %>%
summarise(org_title_mv = sum(is.na(title)),
runtime_mv = sum(is.na(runtime)),
budget_mv = sum(is.na(budget)))
# Output number of NA values found in dataset for the columns stated above
movies_selected
# Alternative method for calculating number of NA values across the same
# headings
movies_selected <- tmdb_movies %>%
select(original_title, runtime, budget) %>%
summarise(across(.fns = ~sum(is.na(.x))))
movies_selected
# Replacing zero runtime values with NA
movies_runtime <- tmdb_movies %>%
select(title, runtime, budget) %>%
mutate(runtime = na_if(runtime, 0))
# Calculating the number of NA values in the runtime column
movies_runtime %>%
summarise(num_na = sum(is.na(runtime)))
# Output both
movies_runtime
num_na
# Replacing zero runtime values with NA
movies_runtime <- tmdb_movies %>%
select(title, runtime, budget) %>%
mutate(runtime = na_if(runtime, 0))
# Calculating the number of NA values in the runtime column
movies_runtime %>%
summarise(num_na = sum(is.na(runtime)))
# Output both
movies_runtime
# Replacing zero runtime values with NA
movies_runtime <- tmdb_movies %>%
select(title, runtime, budget) %>%
mutate(runtime = na_if(runtime, 0))
# Calculating the number of NA values in the runtime column
movies_runtime %>%
summarise(num_na = sum(is.na(runtime)))
# Output both
view(movies_runtime)
# Replace NA values in 'runtime' column with median runtime
movies_imputed <- movies_runtime %>%
mutate(runtime = coalesce(runtime, median(runtime, na.rm = T)))
# Check for no missing runtime values
movies_imputed %>%
summarise(runtime_mv = sum(is.na(runtime)))
#library(dplyr)
longest_runtimes <- movies_imputed %>%
slice_max(runtime, n = 10)
longest_runtimes
shortest_runtimes <- movies_imputed %>%
slice_min(runtime, n = 10)
shortest_runtimes
install.packages("skimr")
